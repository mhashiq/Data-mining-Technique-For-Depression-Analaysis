Response_data <- read.csv("finalll.xlsx")
library(readxl)
Response_data  <- read_excel("finalll.xlsx")
View(Response_data)
str(Response_data)
summary(Response_data)
new_data<-Response_data
X.Squared<-c(1:ncol(new_data))
P_value<-c(1:ncol(new_data))
df<-c(1:ncol(new_data))
for (i in 1:ncol(new_data)){
a<-chisq.test(table(new_data[i]))
X.Squared[i]<-a$statistic
P_value[i]<-a$p.value
df[i]<-a$parameter
}
features_data<-data.frame(X=rep("outcomes",ncol(new_data)),Y=names(new_data),X.Squared,df,P_value)
features_data
library(arules)
library(arulesViz)
Rules <- apriori(Response_data)
summary(Rules)
str(Response_data)
View(features_data)
library(readxl)
final <- read_excel("finalll.xlsx")
View(final)
str(final)
summary(final)
str(final)
x <- factor(c("Age","Gender""))
str(x)
}
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
Response_data <- read_excel("finalll.xlsx")
View(Response_data)
str(Response_data)
library(readxl)
Response_data <- read_excel("finalll.xlsx")
View(Response_data)
str
str(Response_data)
str(Response_data)
library(readxl)
Response_data <- read_excel("finalll.xlsx")
View(Response_data)
str(Response_data)
knitr::opts_chunk$set(echo = TRUE)
summary(knitr::opts_chunk$set(echo = TRUE))
summary(Response_data)
str(Response_data)
age_factor <- factor(Age)
Response_data <- factor(Age)
Age
Str(agrep())
library(readxl)
Response_data <- read_excel("finalll.xlsx")
View(Response_data)
Summary(Response_data)
str(Response_data)
Summary
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
str(Response_data)
Response_data$Age<-as.factor(Response_data$Age)
str(Response_data)
knitr::opts_chunk$set(echo = TRUE)
Response_data$Age<-as.factor(Response_data$Age)
Response_data$Gender<-as.factor(Response_data$Gender)
Response_data$Think_About_You <-as.factor(Response_data$Think_About_You)
Response_data$Try_Committed_Suicide  <-as.factor(Response_data$Try_Committed_Suicide )
Response_data$Try_Committed_Suicide  <-as.factor(Response_data$Try_Committed_Suicide )
Response_data$Try_Committed_Suicide  <-as.factor(Response_data$Try_Committed_Suicide )
Response_data$Have_Smart_Phone <-as.factor(Response_data$Have_Smart_Phone)
Response_data$ Like_Spend_Time_With_friend <-as.factor(Response_data$ Like_Spend_Time_With_friend)
Response_data$Happy_Current_position  <-as.factor(Response_data$Happy_Current_position )
Response_data$Tensed_About_Carrer  <-as.factor(Response_data$Tensed_About_Carrer )
Response_data$Discuss_problem_anyone <-as.factor(Response_data$Discuss_problem_anyone)
Response_data$Feel_Comfortable_being_alone  <-as.factor(Response_data$Feel_Comfortable_being_alone)
Response_data$Try_Committed_Suicide  <-as.factor(Response_data$Try_Committed_Suicide )
Response_data$suicide_is_the_solution_all_problems <-as.factor(Response_data$suicide_is_the_solution_all_problems)
Response_data$happy_with_family_members <-as.factor(Response_data$happy_with_family_members)
Response_data$consider_yourself_family_burden <-as.factor(Response_data$consider_yourself_family_burden)
Response_data$Where_feel_more_comfortable <-as.factor(Response_data$Where_feel_more_comfortable)
Response_data$Family_Member <-as.factor(Response_data$Family_Members)
Response_data$participated_extra_curricular_activities  <-as.factor(Response_data$participated_extra_curricular_activities)
Response_data$difficulties_in_your_educational_system <-as.factor(Response_data$difficulties_in_your_educational_system)
Response_data$Sleep_in_a_day <-as.factor(Response_data$Sleep_in_a_day)
Response_data$SSC_Result  <-as.factor(Response_data$SSC_Result)
Response_data$HSC_Result <-as.factor(Response_data$HSC_Result)
Response_data$University_CGPA <-as.factor(Response_data$University_CGPA)
str(Response_data)
Response_data$Family_Members <-as.factor(Response_data$Family_Members)
Str(Response_data)
str(Response_data)
Response_data$Think_About_You<-as.factor(Response_data$Think_About_You)
str(Response_data)
Response_data$Agree_Society_Rule<-as.factor(Response_data$Agree_Society_Rule)
summary(Response_data)
str(Response_data)
options(scipen = 0)
new_data<-Response_data
X.Squared<-c(1:ncol(new_data))
P_value<-c(1:ncol(new_data))
df<-c(1:ncol(new_data))
for (i in 1:ncol(new_data)){
a<-chisq.test(table(new_data[i]))
X.Squared[i]<-a$statistic
P_value[i]<-a$p.value
df[i]<-a$parameter
}
```{r}
##Attach scientific notation in printing with this code
options(scipen = 0) # if remove than use scipen=999
new_data<-Response_data
X.Squared<-c(1:ncol(new_data))
P_value<-c(1:ncol(new_data))
df<-c(1:ncol(new_data))
for (i in 1:ncol(new_data)){
a<-chisq.test(table(new_data[i]))
X.Squared[i]<-a$statistic
P_value[i]<-a$p.value
df[i]<-a$parameter
}
features_data<-data.frame(X=rep("outcomes",ncol(new_data)),Y=names(new_data),X.Squared,df,P_value)
features_data
summary(Response_data)
library(arules)
library(arulesViz)
Rules <- apriori(Response_data)
summary(Rules)
Rule<-apriori(Response_data,parameter = list(support=0.45,confidence=0.95))
inspect(head(Rule,8))
inspect(head(sort(Rule,by="lift"),8))
oneRule <- sample(Rule, 8)
inspect(oneRule)
plot(oneRule)
plot(oneRule,method = "paracoord")
plot(oneRule,method = "graph")
plot(rules.pruned,method="grouped")
# Finding redundancy
redundant <- is.redundant(Rule, measure="confidence")
which(redundant)
rules.pruned <- Rule[!redundant]
rules.pruned <- sort(rules.pruned, by="lift")
inspect(rules.pruned)
# Rules with specified parameter valus
rules <- apriori(Response_data,parameter = list(maxlen=5,supp=.45, conf=.95))
summary(rules)
# Finding redundancy
redundant <- is.redundant(rules, measure="confidence")
which(redundant)
rules.pruned <- rules[!redundant]
rules.pruned <- sort(rules.pruned, by="lift")
inspect(rules.pruned)
# Graphs and Charts
library(arulesViz)
plot(rules.pruned)
plot(rules.pruned,method="grouped")
plot(rules.pruned,method="graph",control=list(type="items"))
plot(Rule,method = "paracoord")
oneRule
plot(oneRule,method = "paracoord")
plot(oneRule, method = "two-key plot")
